---
# Create user and home directory
- name: Create user and home directory
  ansible.builtin.user:
    name: "{{ install_github_runner_runner_user }}"
    home: "/home/{{ install_github_runner_runner_user }}"
    state: present

# Download actions-runner package
- name: Download actions-runner package
  ansible.builtin.get_url:
    url: "{{ install_github_runner_actions_runner_url }}"
    # yamllint disable rule:line-length
    dest: "{{ install_github_runner_actions_runner_dir }}/actions-runner-linux-x64-{{ install_github_runner_actions_runner_version }}.tar.gz"
    mode: "0644"

# Extract actions-runner
- name: Extract actions-runner package
  ansible.builtin.unarchive:
  # yamllint disable rule:line-length
    src: "{{ install_github_runner_actions_runner_dir }}/actions-runner-linux-x64-{{ install_github_runner_actions_runner_version }}.tar.gz"
    dest: "{{ install_github_runner_actions_runner_dir }}"
    remote_src: true
    creates: "{{ install_github_runner_actions_runner_dir }}/config.sh"

# Run configuration
- name: Run configuration
  ansible.builtin.command:
    cmd: "./config.sh --url {{ install_github_runner_github_repo_url }} --token {{ install_github_runner_github_repo_token }}"
    chdir: "{{ install_github_runner_actions_runner_dir }}"
  become: true
  become_user: gitrunner
  changed_when: false

# Start GitHub Runner
- name: Run script ./run.sh
  ansible.builtin.command:
    cmd: ./run.sh
    chdir: "{{ install_github_runner_actions_runner_dir }}"
  changed_when: false

# Create Systemd unit file
- name: Create Systemd unit file
  ansible.builtin.template:
    src: templates/github-runner.service.j2
    dest: /etc/systemd/system/github-runner.service
    owner: "{{ install_github_runner_runner_user }}"
    group: "{{ install_github_runner_runner_user }}"
    mode: "0644"
  notify: Reload systemd
  changed_when: false
